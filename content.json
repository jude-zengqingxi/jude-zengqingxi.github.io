[{"title":"带头节点的双循环链表","date":"2019-12-31T04:22:12.000Z","path":"2019/12/31/zengqing/","text":"初始化##123456void DLinkListInit(DLinkLIst &amp;L)&#123; L&#x3D;new node; L-&gt;next&#x3D;L; L-&gt;prior&#x3D;L;&#125; 创建##12345678910111213141516171819void CreateDlinklist(DLinkLIst &amp;L)&#123; int n,m; DLinkLIst s; DLinkLIst r&#x3D;L; cout&lt;&lt;&quot;please input a number:&quot;; cin&gt;&gt;n; for(int i&#x3D;0;i&lt;n;i++) &#123; s&#x3D;new node; cin&gt;&gt;m; s-&gt;data&#x3D;m; r-&gt;next&#x3D;s; s-&gt;prior&#x3D;r; r&#x3D;s; &#125; r-&gt;next&#x3D;L; L-&gt;prior&#x3D;r;&#125; 计算长度##1234567891011int DlinkLength(DLinkLIst L)&#123; DLinkLIst p&#x3D;L-&gt;next; int count&#x3D;0; while(p!&#x3D;L) &#123; count++; p&#x3D;p-&gt;next; &#125; return count;&#125; 插入新的结点##12345678910111213141516171819202122void InsertDlinklist(DLinkLIst &amp;L,int i,int e,int length)&#123; DLinkLIst p&#x3D;L; int j&#x3D;0; if(i&lt;1||i&gt;length+1) &#123; cout&lt;&lt;&quot;false&quot;; &#125; while(j&lt;i-1) &#123; p&#x3D;p-&gt;next; j++; &#125; DLinkLIst s&#x3D;new node; s-&gt;data &#x3D; e; s-&gt;next&#x3D;p-&gt;next; s-&gt;prior&#x3D;p-&gt;next-&gt;prior; p-&gt;next&#x3D;s; s-&gt;next-&gt;prior&#x3D;s;&#125; 删除结点##1234567891011121314151617void DeleteDlinklist(DLinkLIst &amp;L,int e)&#123; DLinkLIst p&#x3D;L-&gt;next; while(p!&#x3D;L&amp;&amp;p-&gt;data!&#x3D;e) &#123; p&#x3D;p-&gt;next; &#125; if(p&#x3D;&#x3D;L) &#123; cout&lt;&lt;&quot;can&#39;t find this number,delete fail&quot;; exit(0); &#125; p-&gt;prior-&gt;next&#x3D;p-&gt;next; p-&gt;next-&gt;prior&#x3D;p-&gt;prior; delete p;&#125; 正序输出##123456789void coutprint_H(DLinkLIst L)&#123; DLinkLIst p&#x3D;L-&gt;next; while(p!&#x3D;L) &#123; cout&lt;&lt;p-&gt;data&lt;&lt;&quot; &quot;; p&#x3D;p-&gt;next; &#125;&#125; 逆序输出##12345678void coutprint_E(DLinkLIst L)&#123; DLinkLIst p&#x3D;L-&gt;prior; while(p!&#x3D;L) &#123; cout&lt;&lt;p-&gt;data&lt;&lt;&quot; &quot;; p&#x3D;p-&gt;prior; &#125; 完整代码##123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;cstdlib&gt;using namespace std;typedef struct node&#123; int data; struct node *prior; struct node *next;&#125;*DLinkLIst;void DLinkListInit(DLinkLIst &amp;L)&#123; L&#x3D;new node; L-&gt;next&#x3D;L; L-&gt;prior&#x3D;L;&#125;void CreateDlinklist(DLinkLIst &amp;L)&#123; int n,m; DLinkLIst s; DLinkLIst r&#x3D;L; cout&lt;&lt;&quot;please input a number:&quot;; cin&gt;&gt;n; for(int i&#x3D;0;i&lt;n;i++) &#123; s&#x3D;new node; cin&gt;&gt;m; s-&gt;data&#x3D;m; r-&gt;next&#x3D;s; s-&gt;prior&#x3D;r; r&#x3D;s; &#125; r-&gt;next&#x3D;L; L-&gt;prior&#x3D;r;&#125;int DlinkLength(DLinkLIst L)&#123; DLinkLIst p&#x3D;L-&gt;next; int count&#x3D;0; while(p!&#x3D;L) &#123; count++; p&#x3D;p-&gt;next; &#125; return count;&#125;void InsertDlinklist(DLinkLIst &amp;L,int i,int e,int length)&#123; DLinkLIst p&#x3D;L; int j&#x3D;0; if(i&lt;1||i&gt;length+1) &#123; cout&lt;&lt;&quot;false&quot;; exit(0) ; &#125; while(j&lt;i-1) &#123; p&#x3D;p-&gt;next; j++; &#125; DLinkLIst s&#x3D;new node; s-&gt;data &#x3D; e; s-&gt;next&#x3D;p-&gt;next; s-&gt;prior&#x3D;p-&gt;next-&gt;prior; p-&gt;next&#x3D;s; s-&gt;next-&gt;prior&#x3D;s;&#125;void DeleteDlinklist(DLinkLIst &amp;L,int e)&#123; DLinkLIst p&#x3D;L-&gt;next; while(p!&#x3D;L&amp;&amp;p-&gt;data!&#x3D;e) &#123; p&#x3D;p-&gt;next; &#125; if(p&#x3D;&#x3D;L) &#123; cout&lt;&lt;&quot;can&#39;t find this number,delete fail&quot;; exit(0); &#125; p-&gt;prior-&gt;next&#x3D;p-&gt;next; p-&gt;next-&gt;prior&#x3D;p-&gt;prior; delete p;&#125;void coutprint_H(DLinkLIst L)&#123; DLinkLIst p&#x3D;L-&gt;next; while(p!&#x3D;L) &#123; cout&lt;&lt;p-&gt;data&lt;&lt;&quot; &quot;; p&#x3D;p-&gt;next; &#125;&#125;void coutprint_E(DLinkLIst L)&#123; DLinkLIst p&#x3D;L-&gt;prior; while(p!&#x3D;L) &#123; cout&lt;&lt;p-&gt;data&lt;&lt;&quot; &quot;; p&#x3D;p-&gt;prior; &#125;&#125;int main(void)&#123; DLinkLIst L; int n,m1,m2; int number; DLinkListInit(L); CreateDlinklist(L); n&#x3D;DlinkLength(L); cout&lt;&lt;&quot;please input two numbers you want insert and where:&quot;; cin&gt;&gt;m1&gt;&gt;m2; InsertDlinklist(L,m2,m1,n); coutprint_H(L); cout&lt;&lt;endl; cout&lt;&lt;&quot;please input a number that you want to delete:&quot;; cin&gt;&gt;number; DeleteDlinklist(L,number); coutprint_H(L); cout&lt;&lt;endl; coutprint_E(L); return 0;&#125;","comments":true,"tags":[{"name":"链表","slug":"链表","permalink":"http://yoursite.com/tags/%E9%93%BE%E8%A1%A8/"}]},{"title":"Anaconda下配置tensorflow","date":"2019-12-31T04:20:25.000Z","path":"2019/12/31/helloyilia/","text":"Anaconda 3.5.2 下安装 tensorflow 2.01.安装AnacondaAnaconda 是一个基于 Python 的数据处理和科学计算平台，它已经内置了许多非常有用的第三方库，装上Anaconda，就相当于把 Python 和一些如 Numpy、Pandas、Scrip、Matplotlib 等常用的库自动安装好了，使得安装比常规 Python 安装要容易。下载地址：官网下载速度太慢，给大家推荐清华源的下载地址： https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ 特别注意一点此处要勾上，否则之后还要去自己手动添加环境变量 ![在这里插入图片描述](https://img-blog.csdnimg.cn/20191216213249315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0Njc1NTg3,size_16,color_FFFFFF,t_70)2.安装tensorflow 切换下载源，加快下载速度 进入windows命令模式，创建tensorflow环境，安装python3.6： conda create –name tensorflow python=3.6 激活tensflow的tfenv环境： activate tensorflow 安装tensorflow:pip install –upgrade –ignore-installed tensorflow3.与pycharm IDE 关联 将项目的解释器选为Anaconda下tensorflow 环境中的 python.exe 即可.","comments":true,"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"http://yoursite.com/tags/tensorflow/"}]},{"title":"Hello World","date":"2019-12-30T08:55:24.258Z","path":"2019/12/30/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","comments":true,"tags":[]}]